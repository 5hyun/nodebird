{"ast":null,"code":"import { createWrapper } from \"next-redux-wrapper\";\nimport { applyMiddleware, compose, createStore } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport reducer from \"../reducers\";\n\nconst configureStore = () => {\n  const middlewares = [];\n  const enhancer = false ? compose(applyMiddleware(...middlewares)) : //  개발할때만 devtools를 사용한다는 의미\n  //  배포시에도 사용하면 데이터가 다 보여서 보안에 취약하고 history를 다 기록해서 메모리 소모가 심함\n  composeWithDevTools(applyMiddleware(...middlewares));\n  const store = createStore(reducer, enhancer);\n  return store;\n};\n\nconst wrapper = createWrapper(configureStore, {\n  debug: true\n});\nexport default wrapper;","map":{"version":3,"sources":["/Users/kwon-ohhyun/Desktop/nodebird/front/store/configureStore.js"],"names":["createWrapper","applyMiddleware","compose","createStore","composeWithDevTools","reducer","configureStore","middlewares","enhancer","store","wrapper","debug"],"mappings":"AAAA,SAASA,aAAT,QAA8B,oBAA9B;AACA,SAASC,eAAT,EAA0BC,OAA1B,EAAmCC,WAAnC,QAAsD,OAAtD;AACA,SAASC,mBAAT,QAAoC,0BAApC;AAEA,OAAOC,OAAP,MAAoB,aAApB;;AAEA,MAAMC,cAAc,GAAG,MAAM;AAC3B,QAAMC,WAAW,GAAG,EAApB;AACA,QAAMC,QAAQ,GACZ,QACIN,OAAO,CAACD,eAAe,CAAC,GAAGM,WAAJ,CAAhB,CADX,GAEI;AACA;AACAH,EAAAA,mBAAmB,CAACH,eAAe,CAAC,GAAGM,WAAJ,CAAhB,CALzB;AAMA,QAAME,KAAK,GAAGN,WAAW,CAACE,OAAD,EAAUG,QAAV,CAAzB;AACA,SAAOC,KAAP;AACD,CAVD;;AAYA,MAAMC,OAAO,GAAGV,aAAa,CAACM,cAAD,EAAiB;AAC5CK,EAAAA,KAAK;AADuC,CAAjB,CAA7B;AAIA,eAAeD,OAAf","sourcesContent":["import { createWrapper } from \"next-redux-wrapper\";\nimport { applyMiddleware, compose, createStore } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\n\nimport reducer from \"../reducers\";\n\nconst configureStore = () => {\n  const middlewares = [];\n  const enhancer =\n    process.env.NODE_ENV === \"production\"\n      ? compose(applyMiddleware(...middlewares))\n      : //  개발할때만 devtools를 사용한다는 의미\n        //  배포시에도 사용하면 데이터가 다 보여서 보안에 취약하고 history를 다 기록해서 메모리 소모가 심함\n        composeWithDevTools(applyMiddleware(...middlewares));\n  const store = createStore(reducer, enhancer);\n  return store;\n};\n\nconst wrapper = createWrapper(configureStore, {\n  debug: process.env.NODE_ENV === \"development\",\n});\n\nexport default wrapper;\n"]},"metadata":{},"sourceType":"module"}