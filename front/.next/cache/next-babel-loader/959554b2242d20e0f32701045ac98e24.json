{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/kwon-ohhyun/Desktop/nodebird/front/components/LoginForm.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  padding: 10px;\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  margin-top: 10px;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { useCallback, useState } from \"react\";\nimport { Button, Form, Input } from \"antd\";\nimport Link from \"next/link\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\nimport useInput from \"../hooks/useInput\";\nvar ButtonWrapper = styled.div(_templateObject());\n_c = ButtonWrapper;\nvar FormWrapper = styled(Form)(_templateObject2());\n_c2 = FormWrapper;\n\nvar LoginForm = function LoginForm(_ref) {\n  _s();\n\n  var setIsLoggedIn = _ref.setIsLoggedIn;\n\n  var _useInput = useInput(\"\"),\n      _useInput2 = _slicedToArray(_useInput, 2),\n      id = _useInput2[0],\n      onChangeId = _useInput2[1];\n\n  var _useInput3 = useInput(\"\"),\n      _useInput4 = _slicedToArray(_useInput3, 2),\n      password = _useInput4[0],\n      onChangePassword = _useInput4[1]; // 컴포넌트에 props로 넘기는 함수는 useCallback을 써야 최적화가 된다.\n\n\n  var onSubmitForm = useCallback(function (e) {\n    console.log(id, password);\n    setIsLoggedIn(true);\n  }, [id, password]);\n  return (// antDesign의 onFinish는 preventDefault가 자동 적용되어 있다.\n    __jsx(FormWrapper, {\n      onFinish: onSubmitForm,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 5\n      }\n    }, __jsx(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 7\n      }\n    }, __jsx(\"label\", {\n      htmlFor: \"user-id\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }\n    }, \"\\uC544\\uC774\\uB514\"), __jsx(\"br\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }\n    }), __jsx(Input, {\n      name: \"user-id\",\n      value: id,\n      onChange: onchangeId,\n      required: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }\n    })), __jsx(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 7\n      }\n    }, __jsx(\"label\", {\n      htmlFor: \"user-password\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }\n    }, \"\\uBE44\\uBC00\\uBC88\\uD638\"), __jsx(\"br\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }\n    }), __jsx(Input, {\n      name: \"user-password\",\n      type: \"password\",\n      value: password,\n      onChange: onchangePassword,\n      required: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }\n    })), __jsx(ButtonWrapper, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }\n    }, __jsx(Button, {\n      type: \"primary\",\n      htmlType: \"submit\",\n      loading: false,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }\n    }, \"\\uB85C\\uADF8\\uC778\"), __jsx(Link, {\n      href: \"/signup\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }\n    }, __jsx(\"a\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }\n    }, __jsx(Button, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }\n    }, \"\\uD68C\\uC6D0\\uAC00\\uC785\")))))\n  );\n};\n\n_s(LoginForm, \"XDBWGSalF7xldTftSzZVSBOwwyA=\", false, function () {\n  return [useInput, useInput];\n});\n\n_c3 = LoginForm;\nLoginForm.prototype = {\n  setIsLoggedIn: PropTypes.func.isRequired\n};\nexport default LoginForm;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"ButtonWrapper\");\n$RefreshReg$(_c2, \"FormWrapper\");\n$RefreshReg$(_c3, \"LoginForm\");","map":{"version":3,"sources":["/Users/kwon-ohhyun/Desktop/nodebird/front/components/LoginForm.js"],"names":["useCallback","useState","Button","Form","Input","Link","styled","PropTypes","useInput","ButtonWrapper","div","FormWrapper","LoginForm","setIsLoggedIn","id","onChangeId","password","onChangePassword","onSubmitForm","e","console","log","onchangeId","onchangePassword","prototype","func","isRequired"],"mappings":"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","sourcesContent":["import { useCallback, useState } from \"react\";\nimport { Button, Form, Input } from \"antd\";\nimport Link from \"next/link\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\nimport useInput from \"../hooks/useInput\";\n\nconst ButtonWrapper = styled.div`\n  margin-top: 10px;\n`;\n\nconst FormWrapper = styled(Form)`\n  padding: 10px;\n`;\n\nconst LoginForm = ({ setIsLoggedIn }) => {\n  const [id, onChangeId] = useInput(\"\");\n  const [password, onChangePassword] = useInput(\"\");\n\n  // 컴포넌트에 props로 넘기는 함수는 useCallback을 써야 최적화가 된다.\n  const onSubmitForm = useCallback(\n    (e) => {\n      console.log(id, password);\n      setIsLoggedIn(true);\n    },\n    [id, password]\n  );\n\n  return (\n    // antDesign의 onFinish는 preventDefault가 자동 적용되어 있다.\n    <FormWrapper onFinish={onSubmitForm}>\n      <div>\n        <label htmlFor=\"user-id\">아이디</label>\n        <br />\n        <Input name={\"user-id\"} value={id} onChange={onchangeId} required />\n      </div>\n      <div>\n        <label htmlFor=\"user-password\">비밀번호</label>\n        <br />\n        <Input\n          name={\"user-password\"}\n          type={\"password\"}\n          value={password}\n          onChange={onchangePassword}\n          required\n        />\n      </div>\n      {/* <div style={{ marginTop: 10 }}> 아런식으로 하면 안된다. 왜냐하면 객체 {} === {}는 false라서 리렌더링이 발생한다.*/}\n      {/* 성능에 크게 문제가 없다면 인라인 스타일을 써도 되긴한다. */}\n      <ButtonWrapper>\n        {/* htmlType에 submit을 해줘야 form이 submit이 된다. */}\n        <Button type=\"primary\" htmlType={\"submit\"} loading={false}>\n          로그인\n        </Button>\n        <Link href=\"/signup\">\n          <a>\n            <Button>회원가입</Button>\n          </a>\n        </Link>\n      </ButtonWrapper>\n    </FormWrapper>\n  );\n};\n\nLoginForm.prototype = {\n  setIsLoggedIn: PropTypes.func.isRequired,\n};\n\nexport default LoginForm;\n"]},"metadata":{},"sourceType":"module"}